[versions]

androidGradlePlugin = "8.2.0"
daggerHiltAndroidGradlePlugin = "2.48"
kotlinAndroidGradlePluign = "1.9.0"
kotlinJvmGradlePlugin = "1.8.10"
kotlinPluginSerializationGradlePlugin = "1.6.0"

compileSdk = "34"
kotlinCompilerExtensionVersion = "1.5.2"
minSdk = "24"
targetSdk = "34"

activityCompose = "1.8.2"
androidXAppCompat = "1.6.1"
androidXCoreKtx = "1.12.0"
androidXHiltNavigationCompose = "1.1.0"
androidXLifecycleRuntimeCompose = "2.6.2"
androidXLifecycleRuntimeKtx = "2.6.2"
androidXTestEspressoCore = "3.5.1"
androidXTestJunit = "1.1.5"
composeBom = "2023.10.01"
dataStore = "1.0.0"
hilt = "2.48.1"
javaxInject = "1"
junit = "4.13.2"
kotlinTest = "1.9.20"
kotlinXCoroutinesCoreJvm = "1.7.3"
kotlinSerialization = "1.6.0"
kotlinSerializationConverter = "1.0.0"
materialDesign = "1.11.0"
mockk = "1.13.8"
okhttp = "4.12.0"
parcelize = "1.9.20"
retrofit = "2.9.0"

[plugins]

android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "daggerHiltAndroidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinAndroidGradlePluign" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinJvmGradlePlugin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinPluginSerializationGradlePlugin" }

# Custom Plugin
thierry-android-application = { id = "thierry.android.application" }
thierry-android-library = { id = "thierry.android.library" }
thierry-hilt-android = { id = "thierry.hilt.android" }
thierry-jvm-library = { id = "thierry.jvm.library" }
thierry-kotlin-parcelize = { id = "thierry.kotlin.parcelize" }
thierry-hilt-jvm = { id = "thierry.hilt.jvm" }
thierry-compose = { id = "thierry.compose" }
androidLibrary = { id = "com.android.library", version.ref = "androidGradlePlugin" }

[bundles]

compose = ["composeUi", "composeMaterial3"]

[libraries]

# AndroidXActivityCompose
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }

# AndroidXAppCompat
androidXAppCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidXAppCompat" }

# AndroidXCoreKtx
androidXCoreKtx = { module = "androidx.core:core-ktx", version.ref = "androidXCoreKtx" }

# AndroidXDataStore
dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }

# AndroidXHiltNavigationCompose
androidXHiltNavigationCompose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidXHiltNavigationCompose" }

# AndroidXLifecycleRuntimeCompose
androidXLifecycleRuntimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidXLifecycleRuntimeCompose" }

# AndroidXLifecycleRuntimeKtx
androidXLifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidXLifecycleRuntimeKtx" }

# AndroidXTestEspressoCore
androidXTestEspressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "androidXTestEspressoCore" }

# AndroidXTestJunit
androidXTestJunit = { module = "androidx.test.ext:junit", version.ref = "androidXTestJunit" }

# AndroidXComposeBom
composeBom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }

# DaggerHilt
hilt = { module = "com.google.dagger:hilt-core", version.ref = "hilt" }

# DaggerHiltAndroid
hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }

# DagerHiltCompiler
hiltCompiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

# JavaxInject
javaxInject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }

# Junit
junit = { module = "junit:junit", version.ref = "junit" }

# KotlinTest
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlinTest" }

# KotlinXCoroutinesCoreJvm
kotlinXCoroutinesCoreJvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlinXCoroutinesCoreJvm" }

# KotlinXCoroutinesTestJvm
kotlinXCoroutinesTestJvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test-jvm", version.ref = "kotlinXCoroutinesCoreJvm" }

# KotlinSerializationJson
kotlinSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }

# AndroidMaterial
materialDeisgn = { module = "com.google.android.material:material", version.ref = "materialDesign" }

# Mockk
mockkJvm = { module = "io.mockk:mockk-jvm", version.ref = "mockk" }

# Parcelize
parcelize = { module = "org.jetbrains.kotlin:kotlin-parcelize-runtime", version.ref = "parcelize" }

# RetrofitKotlinSerializationConverter
retrofit2ConverterKotlinSerialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "kotlinSerializationConverter" }

# Okhttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# Retrofit2
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

# AndroidXComposeMaterial3
composeMaterial3 = { module = "androidx.compose.material3:material3" }

# AndroidXComposeUi
composeUi = { module = "androidx.compose.ui:ui" }

# AndroidXComposeUiGraphics
composeUiGraphics = { module = "androidx.compose.ui:ui-graphics" }

# AndroidXComposeUiTestJunit4
composeUiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4" }

# AndroidXComposeUiTestManifest
composeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }

# AndroidXComposeUiTooling
composeUiTooling = { module = "androidx.compose.ui:ui-tooling" }

# AndroidXComposeUiToolingPreview
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }

# Plugin Region
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlinAndroidGradlePluign" }
